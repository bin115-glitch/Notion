name: Notion Overdue Mailer

on:
  schedule:
    # Ch·∫°y h√†ng ng√†y l√∫c 4:00 PM (VN time) - 9:00 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Test mode (kh√¥ng g·ª≠i email th·∫≠t)'
        required: false
        default: 'false'
        type: boolean

jobs:
  send-overdue-emails:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Notion connection
      env:
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      run: |
        python -c "
        import requests
        import os
        token = os.getenv('NOTION_TOKEN')
        db_id = os.getenv('NOTION_DATABASE_ID')
        headers = {
            'Authorization': f'Bearer {token}',
            'Notion-Version': '2022-06-28',
            'Content-Type': 'application/json'
        }
        r = requests.get(f'https://api.notion.com/v1/databases/{db_id}', headers=headers)
        if r.status_code == 200:
            print('‚úÖ Notion connection successful')
        else:
            print(f'‚ùå Notion connection failed: {r.status_code}')
            exit(1)
        "
    
    - name: Run Notion Overdue Mailer
      env:
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
        SMTP_HOST: ${{ secrets.SMTP_HOST }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USER: ${{ secrets.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        TEST_MODE: ${{ github.event.inputs.test_mode }}
      run: |
        if [ "$TEST_MODE" = "true" ]; then
          echo "üß™ Running in test mode..."
          python -c "
          import os
          print('Environment variables loaded:')
          print(f'NOTION_TOKEN: {os.getenv(\"NOTION_TOKEN\", \"Not set\")[:10]}...')
          print(f'NOTION_DATABASE_ID: {os.getenv(\"NOTION_DATABASE_ID\", \"Not set\")}')
          print(f'EMAIL_RECIPIENTS: {os.getenv(\"EMAIL_RECIPIENTS\", \"Not set\")}')
          print(f'SMTP_HOST: {os.getenv(\"SMTP_HOST\", \"Not set\")}')
          print(f'SMTP_USER: {os.getenv(\"SMTP_USER\", \"Not set\")}')
          "
        else
          echo "üöÄ Running Notion Overdue Mailer..."
          python main.py
        fi
    
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const title = `Notion Overdue Mailer Failed - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Notion Overdue Mailer Failed
          
          **Date:** ${new Date().toISOString()}
          **Workflow:** ${{ github.workflow }}
          **Run ID:** ${{ github.run_id }}
          
          Please check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
          
          ### Possible causes:
          - Notion API token expired or invalid
          - Database ID changed
          - SMTP credentials invalid
          - Network connectivity issues
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['bug', 'notion-mailer']
          });
