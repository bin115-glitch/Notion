name: Notion Overdue Report

on:
  schedule:
    - cron: "0 1 * * 1-5"      # 01:00 UTC = 08:00 VN, chạy Thứ 2–6
  workflow_dispatch: {}

jobs:
  run-notion-script:
    runs-on: ubuntu-latest

    env:
      NOTION_VERSION: "2022-06-28"
      DB_ID: "25a5be1a5701810bac83e27f14902dc3"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests python-dotenv
          fi

      # Luôn tạo notion_token.json từ secrets (không lưu token trong repo)
      - name: Prepare notion_token.json
        shell: bash
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          # nếu gửi mail thì map thêm:
          SMTP_HOST:  ${{ secrets.SMTP_HOST }}
          SMTP_PORT:  ${{ secrets.SMTP_PORT }}
          SMTP_USER:  ${{ secrets.SMTP_USER }}
          SMTP_PASS:  ${{ secrets.SMTP_PASS }}
        run: |
          set -e
          test -n "$NOTION_TOKEN" || { echo "❌ NOTION_TOKEN secret is empty"; exit 1; }

          cat > notion_token.json <<'JSON'
          {
            "notion_tokens": [
              {
                "name": "Primary",
                "token_env": "NOTION_TOKEN",
                "databases": [
                  { "id": "25a5be1a5701810bac83e27f14902dc3", "name": "Overdue DB" }
                ]
              }
            ],
            "smtp_env": {
              "host": "SMTP_HOST",
              "port": "SMTP_PORT",
              "user": "SMTP_USER",
              "pass": "SMTP_PASS"
            }
          }
          JSON

          echo "✅ Wrote notion_token.json ($(wc -c < notion_token.json) bytes)"

      - name: Sanity check Notion token & DB access
        shell: bash
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        run: |
          set -e
          echo "Check /users/me..."
          code_users=$(curl -sS -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: $NOTION_VERSION" \
            https://api.notion.com/v1/users/me)
          [ "$code_users" = "200" ] || { echo "❌ users/me HTTP $code_users"; exit 1; }

          echo "Check database visibility..."
          code_db=$(curl -sS -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $NOTION_TOKEN" \
            -H "Notion-Version: $NOTION_VERSION" \
            https://api.notion.com/v1/databases/$DB_ID)
          case "$code_db" in
            200) echo "✅ DB visible";;
            404) echo "❌ DB not found or not shared with the bot (HTTP 404)"; exit 1;;
            *)   echo "❌ Unexpected DB check status: $code_db"; exit 1;;
          esac

      - name: Run notifier
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          SMTP_HOST:    ${{ secrets.SMTP_HOST }}
          SMTP_PORT:    ${{ secrets.SMTP_PORT }}
          SMTP_USER:    ${{ secrets.SMTP_USER }}
          SMTP_PASS:    ${{ secrets.SMTP_PASS }}
          NOTION_CONFIG: notion_token.json
        run: |
          python main.py   # đổi lại nếu script tên khác
